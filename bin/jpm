#! /usr/bin/env python

import sys
import commands


try:
    from sh import amixer  # pylint: disable-msg=no-name-in-module
except ImportError:
    amixer = None


from jpm import jpm  # pylint: disable-msg=no-name-in-module


def current(client):
    print jpm.format_current_album(client)


def next(client):
    # pylint: disable-msg=redefined-builtin
    client.next()


def prev(client):
    client.previous()


def restart(_):
    """Restart mpd's daemon"""
    status, output = commands.getstatusoutput(
        '/usr/bin/sudo /usr/sbin/service mpd restart')
    if status != os.EX_OK:
        print output
    else:
        unmute(_)


def unmute(_):
    """Use alsa mixer to unmute channels

    This is probably machine-specific
    """
    for name in ['Master', 'Front', 'Headphone']:
        channel = ','.join([name, '0'])
        if amixer is not None:
            amixer.sset(channel, 'unmute')


def find_method(name):
    """Find a method with that name in the jpm module, or this script"""
    if name in globals():
        return globals()[name]
    if hasattr(jpm, name):
        return getattr(jpm, name)

    def not_found(_):
        raise ValueError('No such command: %r' % name)

    return not_found


def main(args):
    """Run the program"""
    client = jpm.mpd_client()
    try:
        _ = [find_method(arg)(client) for arg in args]
    except Exception, e:  # pylint: disable-msg=broad-except
        print >> sys.stderr, e
        return not os.EX_OK
    return os.EX_OK


if __name__ == '__main__':
    sys.exit(jpm.main(sys.argv[1:]))
